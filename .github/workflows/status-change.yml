name: Status Change â†’ Flip PR Draft/Ready

on:
  issues:
    types: [labeled]

permissions:
  pull-requests: write
  issues: read

# Serialize per ISSUE; last status wins
concurrency:
  group: status-change-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  status-change:
    if: startsWith(github.event.label.name, 'status:')
    runs-on: ubuntu-latest
    steps:
      - name: Auth gh
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Derive branch + find PR
        id: pr
        shell: bash
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE:  ${{ github.event.issue.title }}
        run: |
          set -euo pipefail
          slug=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g;s/^-+|-+$//g')
          BR="feature/${ISSUE_NUMBER}-${slug}"
          PR=$(gh pr list --state open --head "$BR" --json number --jq '.[0].number')
          echo "pr=$PR" >> $GITHUB_OUTPUT
          echo "label=${{ github.event.label.name }}" >> $GITHUB_OUTPUT

      - name: Flip PR state (Draft/Ready) based on label
        if: steps.pr.outputs.pr != ''
        shell: bash
        env:
          PR:    ${{ steps.pr.outputs.pr }}
          LABEL: ${{ steps.pr.outputs.label }}
        run: |
          set -euo pipefail
          case "$LABEL" in
            status:needs-review
              gh pr ready "$PR"
              gh pr edit  "$PR" --add-label "status:needs-review" --remove-label "status:wip" || true
              ;;
            status:wip
              gh pr edit "$PR" --draft
              gh pr edit "$PR" --add-label "status:wip" --remove-label "status:needs-review" || true
              ;;
            *) echo "No action for label: $LABEL" ;;
          esac